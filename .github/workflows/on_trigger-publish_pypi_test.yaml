name: Publish (pypi-test)

on:
  workflow_dispatch:

env:
  PDM_VERSION: "2.16.1"

jobs:
  build_sdist:
    runs-on: 'ubuntu-latest'
    timeout-minutes: 7
    steps:
      # Root path under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Store git tag as file for setuptools dynamic version (mac/ubuntu)
        if: ${{ matrix.os != 'windows-latest' }}
        run: echo "${{github.ref_name}}" >> __VERSION__

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Set up pdm (ubuntu)
        run: |
          curl -sSL https://pdm-project.org/install-pdm.py | \
          python3 - --version ${{env.PDM_VERSION}} \
          && echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Build
        run: pdm build -v --no-wheel

      - name: Upload build artifacts (sdist)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/*.tar.gz

  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        # macos-13 is an intel runner, macos-14 is apple silicon
        os: [ubuntu-latest, windows-latest, macos-13, macos-14]

    runs-on: ${{ matrix.os }}
    timeout-minutes: 7

    steps:
      # Root path under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4

      - name: Store git tag as file for setuptools dynamic version (mac/ubuntu)
        if: ${{ matrix.os != 'windows-latest' }}
        run: echo "${{github.ref_name}}" >> __VERSION__

      - name: Store git tag as file for setuptools dynamic version (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: echo "${{github.ref_name}}" | Out-File -FilePath __VERSION__ -Encoding utf8

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19.2

      - name: Upload build artifacts (wheel)
        uses: actions/upload-artifact@v4
        with:
          name: cibw-wheels-${{ matrix.os }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  publish:
    # Only publish if current commit is tagged
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build_sdist
    - build_wheels
    runs-on: ubuntu-latest
    environment:
      name: pypi_test
      url: https://test.pypi.org/p/tree-sitter-cleancopy
    permissions:
      id-token: write # Mandatory for trusted publishing

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        path: dist/
        merge-multiple: true
    - name: Publish to PyPI (test)
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
