name: Publish (pypi-test)

on:
  workflow_dispatch:

env:
  PYTHON_VERSION_FOR_BUILD: 3.12
  PDM_VERSION: "2.16.1"

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.12']
        os: ['ubuntu-latest', 'windows-latest', 'macos-latest']

    runs-on: ${{ matrix.os }}
    timeout-minutes: 7

    steps:
      # Root path under $GITHUB_WORKSPACE
      - uses: actions/checkout@v4

      - name: Set up python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Update pip
        run: python -m pip install --upgrade pip

      - name: Set up pdm (ubuntu)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          curl -sSL https://pdm-project.org/install-pdm.py | \
          python3 - --version ${{env.PDM_VERSION}} \
          && echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Set up pdm (mac)
        if: ${{ matrix.os == 'macos-latest' }}
        run: |
          (curl -sSL https://pdm-project.org/install-pdm.py | \
          python3 - --version ${{env.PDM_VERSION}}) \
          -and (echo "$HOME/Library/Python/${{matrix.python-version}}/bin" >> $GITHUB_PATH)

      - name: Set up pdm (windows)
        if: ${{ matrix.os == 'windows-latest' }}
        run: |
          (Invoke-WebRequest -Uri https://pdm-project.org/install-pdm.py -UseBasicParsing).Content | \
          python - --version ${{env.PDM_VERSION}} \
          && echo "$env:APPDATA\Python\Scripts" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: Build
        run: pdm build
          
      - name: Upload build artifacts (wheel)
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/*.whl

      - name: Upload build artifacts (sdist)
        if: ${{ matrix.os == 'ubuntu-latest' }}
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/*.tar.gz

  publish:
    # Only publish if current commit is tagged
    if: startsWith(github.ref, 'refs/tags/')
    needs:
    - build
    runs-on: ubuntu-latest
    environment:
      name: pypi_test
      url: https://test.pypi.org/p/tree-sitter-cleancopy
    permissions:
      id-token: write # Mandatory for trusted publishing

    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish to PyPI (test)
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
